---
title: "Data Visualization in R‚Äçüíª"
date: today
author: "Oluwafemi Oyedele"
#suppress-bibliography: true
slide-number: true
show-slide-number: all
self-contained: true 
format:
  LUstyle-revealjs:
    #self-contained: true
    auto-stretch: false
    footer: "{{< fa envelope >}} [https://www.pss.msstate.edu](mailto:oo174@msstate.edu;mjm1166@msstate.edu) {{< fa globe >}} [Website](https://bb1464.github.io/oluwafemi-oyedele/) {{< fa brands linkedin >}} [Oluwafemi Oyedele](https://www.linkedin.com/in/oluwafemioyedele/)<br>[github.com/BB1464](https://github.com/BB1464/Data-Analysis-using-R) {{< fa brands github >}}"
execute: 
  eval: true
  echo: fenced
---

## **Agenda**

::: incremental
-   Introduction to the Grammar of Graphics

-   We will be looking at the different layers that is in ggplot2

-   The focus of this talk will be on the 20% that is useful 80% of the time

-   **My goal is to make you excited about ggplot2!**

-   I will entertain **questions** at the end
:::

## Packages Used Today

::: incremental
-   This workshop focuses on data visualization with [`ggplot2`](https://ggplot2.tidyverse.org).

-   `ggplot2` is a system for declaratively creating graphics, based on The Grammar of Graphics. You provide the data, tell `ggplot2` how to map variables to `aesthetics`, what graphical primitives to use (`geoms`), and it takes care of the details.
:::

```{r load}
#| echo: true
#| include: true

library(ggplot2) 
```

## Grammar of Graphics

::: columns
::: {.column width="50%"}
::: incremental
-   First published in 1999

-   A theoretical deconstruction of data graphics

-   Foundation for many graphic applications

-   The Grammar of Graphics can be applied to every type of plot

-   Concisely describe components
:::
:::

::: {.column width="50%"}
![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/wilkinson.jpeg)
:::
:::

## Grammar of Graphics {background-color="#C1C6C8"}

![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/tom1.png)

## Grammar of Graphics

::: columns
::: {.column width="50%"}
::: incremental
-   Your dataset

-   Tidy format

-   There is no visualization without a dataset
:::
:::

::: {.column width="50%"}
![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/tom_data.png)
:::
:::

## Grammar of Graphics

::: columns
::: {.column width="50%"}
::: incremental
-   **Aesthetics mapping**: links variable in the data to graphical properties in the geometry.

-   We can specify the following properties within the aestetic mapping (colour, shape, alpha, fill, size).
:::
:::

::: {.column width="50%"}
![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/tom_mapping.png)
:::
:::

## Grammar of Graphics

::: columns
::: {.column width="50%"}
::: incremental
-   Transform input variables to displayed values:

    -   Bins for histogram

    -   Summary statistics for boxplot using `stat_boxplot()`

    -   No. of observations in a category for bar chart `stat_count`

-   Even tidy data may need some transformation

-   The statistics is linked to the geometry
:::
:::

::: {.column width="50%"}
![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/tom_statistics.png)
:::
:::

## Grammar of Graphics

::: columns
::: {.column width="50%"}
::: incremental
-   Scales help us to control the mapping from data to aesthetics

-   Scales also provide the tools that let you interpret the plot: the axes and legends.

-   Scales are automatically generated in ggplot and can be customized

    -   log scale

    -   We can also specify limit within the scale

-   Scales help you interpret the plot
:::
:::

::: {.column width="50%"}
![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/tom_scales.png)
:::
:::

## Grammar of Graphics

::: columns
::: {.column width="50%"}
::: incremental
-   Geometries help us to interpret the aesthetics as graphical representation

-   Determines your plot type

    -   bar chart `geom_bar()`
    -   scatter `geom_point()`
    -   box plot `geom_boxplot()`
    -   histogram `geom_histogram()`
:::
:::

::: {.column width="50%"}
![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/tom_geometries.png)
:::
:::

## Grammar of Graphics

::: columns
::: {.column width="50%"}
::: incremental
-   Divide your data into panels using one or two groups

-   Allows you to look at smaller subsets of data
:::
:::

::: {.column width="50%"}
![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/tom_facets.png)
:::
:::

## Grammar of Graphics

::: columns
::: {.column width="50%"}
::: incremental
-   A coordinate system, maps the position of objects onto the plane of the plot.

-   It is also the physical mapping of the aesthetics to the paper

-   Coordinate systems affect all position variables simultaneously and differ from scales in that they also change the appearance of the geometric objects.

-   Coordinate systems control how the axes and grid lines are drawn.
:::
:::

::: {.column width="50%"}
![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/tom_coordinates.png)
:::
:::

## Grammar of Graphics

::: columns
::: {.column width="50%"}
::: incremental
-   This controls the overall look of the plot

-   Spans every part of the graphic that is not linked to the data

-   Themes give you control over things like fonts, ticks, panel strips, and backgrounds
:::
:::

::: {.column width="50%"}
![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/tom_theme.png)
:::
:::

## Grammar of Graphics

![](E:/R Projects Files/Data Analysis using R/slides/_extensions/nrennie/LUstyle/horst_ggplot.jpeg){style="float:center;padding: 0 0 2 10px;" fig-alt="Headshot of Dr. Maria Tackett" width="1000"}

## Demo on ggplot2
